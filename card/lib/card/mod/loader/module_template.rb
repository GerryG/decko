class Card
  module Mod
    module Loader
      class ModuleTemplate
        def initialize modules, content_path
          @pattern = modules.shift
          @modules = modules
          @content = ::File.read content_path
          @content_path = content_path
        end

        def build
          eval to_s, TOPLEVEL_BINDING, @content_path, offset
        end

        def to_s
          return content_with_source_comment if simple_load?
          wrap_with_module_def
        end

        def simple_load?
          @content =~ /\A#!\s?simple load/
        end

        private

        def preamble
          ""
        end

        def postamble
          ""
        end

        def wrap_with_module_def
          <<-RUBY.strip_heredoc
# -*- encoding : utf-8 -*-
#{module_chain}
#{preamble}
#{content_with_source_comment}
#{postamble}
#{end_chain}
          RUBY
        end

        def content_with_source_comment
          <<-RUBY.strip_heredoc
# ~~ above autogenerated; below pulled from #{@content_path} ~~
#{@content}

# ~~ below autogenerated; above pulled from #{@content_path} ~~
          RUBY
        end
      end
    end
  end
end

