class CardViewHandler < YARD::Handlers::Ruby::Base
  handles method_call(:view)
  namespace_only

  process do
    name = statement.parameters.first.jump(:tstring_content, :ident).source
    object = YARD::CodeObjects::MethodObject.new(namespace, "view: #{name}")
    register(object)
    parse_block(statement.last.last, owner: object)

    # modify the object
    object.dynamic = true

    # add custom metadata to the object
    object['custom_field'] = 'generated by #view'
  end
end

class CardEventHandler < YARD::Handlers::Ruby::Base
  handles method_call(:event)
  namespace_only

  process do
    name = statement.parameters.first.jump(:tstring_content, :ident).source
    object = YARD::CodeObjects::MethodObject.new(namespace, "event: #{name}")
    register(object)
    parse_block(statement.last.last, owner: object)

    # modify the object
    object.dynamic = true

    # add custom metadata to the object
    object['custom_field'] = 'generated by #event'
  end
end
