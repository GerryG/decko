version: v1.0
name: Decko Standard
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: cache dependencies
    task:
      env_vars:
        - name: BUNDLE_PATH
          value: "~/decks/vendor/bundle/"
      prologue:
        commands:
          - checkout
          - sem-version ruby 2.6.3
      jobs:
        - name: cache submodules
          commands:

            - git submodule status > substat.txt
            - cache delete git-modules-$(checksum substat.txt)
            - git submodule foreach 'cache delete git-submodule-$sha1'

            # - cache restore git-modules-$(checksum substat.txt)
            # - git submodule foreach 'cache restore git-submodule-$sha1'

            - git submodule sync
            - git submodule update --init
            - cache store git-module-$(checksum substat.txt) .git/modules
            - git submodule foreach 'cache store git-submodule-$sha1 ~/decks/$sm_path'
        # NOTE: this caches the submodule code but does not cache all the files
        # in .git/modules that tell git that everything is groovy.
        # We can, of course, try caching that, which would in allow us to restore the
        # submodules across builds, but we'd need a unique cache key that would catch
        # updates to ANY submodule
        - name: cache gems
          commands:
            # - cache delete bundle-gems-baseline
            # - cache delete bundle-gems-$(checksum Gemfile.lock)
            - cache restore bundle-gems-baseline
            # long-term cache so we don't start from scratch when Gemfile.lock is ticked
            # may need to clear manually from time to time
            - cache restore bundle-gems-$(checksum Gemfile.lock)
            # cache for current Gemfile.lock
            - bundle install
            - bundle info rails
            - cache store bundle-gems-baseline vendor/bundle
            - cache store bundle-gems-$(checksum Gemfile.lock) vendor/bundle

  - name: Smoke
    task:
      env_vars:
        - name: BUNDLE_PATH
          value: "~/decks/vendor/bundle/"
      prologue:
        commands:
          - checkout
          - sem-version ruby 2.6.3
          - sem-service start mysql
          - git submodule foreach 'cache restore git-submodule-$sha1'
          - cache restore bundle-gems-$(checksum Gemfile.lock)
      jobs:
        - name: Shark Smoke
          commands:
            - bundle exec decko new shark --repo-path="../"
            - cd shark
            - bundle exec decko seed
        - name: Monkey Smoke
          commands:
            - bundle exec decko new monkey --monkey --repo-path="../"
            - cd monkey
            - bundle exec decko seed
            - bundle info rails
            - bundle info decko


  - name: "Unit Tests"
    task:
      env_vars:
        - name: COVERAGE
          value: "false"
        - name: BUNDLE_PATH
          value: "~/decks/vendor/bundle"
        - name: RAILS_ENV
          value: "test"
      prologue:
        commands:
          - checkout
          - sem-version ruby 2.6.3
          - sem-service start mysql
          - git submodule foreach 'cache restore git-submodule-$sha1'
          - cache restore bundle-gems-$(checksum Gemfile.lock)
      jobs:
        - name: RSpec
          commands:
            - bundle exec decko new platypus --platypus --repo-path="../"
            - cd platypus
            - bundle exec decko seed --test
            - bundle info rails
            - bundle info decko
            - bundle exec decko rspec
          commands:
            - checkout
            - ls -al
            - echo "make rspec"


  - name: "Integration Tests"
    # dependencies: []
    task:
      jobs:
        - name: Cucumber
          commands:
            - checkout
            # - wget https://gist.githubusercontent.com/mimimalizam/9aef3aa5ac0884943efb6aca947a8b56/raw/firefox-semaphore.sh && bash firefox-semaphore.sh 64.0.2
            - echo "make cucumber"

  # - name: "Push Image"
  #   # dependencies: []
  #   task:
  #     jobs:
  #       - name: Push
  #         commands:
  #           - checkout
  #           - echo "make docker.push"
